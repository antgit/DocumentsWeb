@using System.Data
@using System.Globalization
@using BusinessObjects
@using DocumentsWeb.Models

@{
    bool haveEdit = WADataProvider.FolderElementRightView.IsAllow(BusinessObjects.Security.Right.DOCEDIT, WADataProvider.WA.GetFolderByCodeFind(Folder.CODE_FIND_PRICES_IND).Id);
    bool haveView = WADataProvider.FolderElementRightView.IsAllow(BusinessObjects.Security.Right.DOCVIEW, WADataProvider.WA.GetFolderByCodeFind(Folder.CODE_FIND_PRICES_IND).Id);
}

@Html.DevExpress().GridView(settings=>{
    settings.Name = "gvPriceDocumentsInd";

    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Hidden;
    settings.SettingsBehavior.AllowFocusedRow = true;
    settings.KeyFieldName = GlobalPropertyNames.Id;

    settings.CallbackRouteValues = new { Controller = "Home", Action = "ViewBoardPriceListIndPartial" };
    
    settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
    settings.SettingsPager.Visible = false;
    settings.Styles.Cell.Font.Size = System.Web.UI.WebControls.FontUnit.Point(11);
    settings.Styles.Cell.Paddings.Padding = System.Web.UI.WebControls.Unit.Pixel(0);
    settings.Styles.Cell.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    settings.Height = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control; 
    settings.Settings.ShowVerticalScrollBar = true;
    settings.Settings.ShowHorizontalScrollBar = true;
    settings.Settings.VerticalScrollableHeight = 125;
    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
    settings.Settings.ShowFilterRow = false;

    settings.Settings.ShowTitlePanel = true;
    settings.SetTitlePanelTemplateContent(c =>
    {
        ViewContext.Writer.Write("<div style=\"width: 100%; text-align: center; font-size: 10pt;\">");
        Html.DevExpress().HyperLink(hl =>
        {
            hl.Properties.ImageUrl = Url.Content("~/Images/REFRESHGREEN_X16.png");
            hl.ToolTip = "Обновить";
            hl.Style.Add("float", "left");
            hl.NavigateUrl = "javascript:gvPriceDocumentsInd.PerformCallback('refresh=true');";
        }).Render();
        Html.DevExpress().HyperLink(s =>
        {
            s.Properties.Text = "Просмотреть все \"Индивидуальные прайс-листы\"";
            s.NavigateUrl = Url.Action("Index", "ViewListPriceListInd");

        }).Render();
        ViewContext.Writer.Write("</div>");
    });

    if (haveEdit || haveView)
    {
        settings.Columns.Add(cc =>
        {
            cc.Name = "colImageAction";
            cc.Width = System.Web.UI.WebControls.Unit.Pixel(20);
            cc.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
            cc.SetDataItemTemplateContent(c =>
            {
                string icon = (int)DataBinder.Eval(c.DataItem, "StateId") == State.STATEACTIVE
                                    ? Url.Content("~/Images/DOCUMENTDONE_X16.png")
                                    : Url.Content("~/Images/DOCUMENTNOTDONE_X16.png");
                Html.DevExpress().HyperLink(hl =>
                {
                    hl.Name = "PriceListCreate_" + c.ItemIndex.ToString(CultureInfo.InvariantCulture);
                    hl.Properties.ImageUrl = icon;
                    hl.ToolTip = "Просмотреть/Изменить";
                    hl.NavigateUrl = DevExpressHelper.GetUrl(new { Area = "Prices", Controller = "PriceListInd", Action = "Edit", Id = c.KeyValue });
                    hl.Properties.Target = "_blank";
                    hl.ClientEnabled = haveEdit || haveView;
                    hl.ClientVisible = haveEdit || haveView;
                }).Render();
            });
        });
    }
    
    settings.Columns.Add(column =>
    {
        column.FieldName = GlobalPropertyNames.Date;
        column.Caption = "Дата";
        column.Width = 70;
        column.PropertiesEdit.DisplayFormatString = "d";
        column.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
        column.ColumnType = MVCxGridViewColumnType.DateEdit;
    });
    
    MVCxGridViewColumn colNumber = settings.Columns.Add("DocNumber", "Номер");
    colNumber.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    colNumber.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    colNumber.Width = 70;
                
    
    settings.Columns.Add(column =>
    {
        column.FieldName = "DateStart";
        column.Caption = "Действует с";
        column.Width = 100;
        column.ColumnType = MVCxGridViewColumnType.DateEdit;
        column.PropertiesEdit.DisplayFormatString = "d";
        column.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "ExpireDate";
        column.Caption = "Действует по";
        column.Width = 100;
        column.ColumnType = MVCxGridViewColumnType.DateEdit;
        column.PropertiesEdit.DisplayFormatString = "d";
        column.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    });

    MVCxGridViewColumn colWho = settings.Columns.Add("AgentFromName", "Предприятие");
    colWho.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    colWho.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    colWho.Width = 450;
    colWho.SetDataItemTemplateContent(c => Html.DevExpress().HyperLink(s =>
        {
            s.Properties.Text = (string)DataBinder.Eval(c.DataItem, "AgentFromName");
            int id = (int)DataBinder.Eval(c.DataItem, "AgentFromId");
            s.NavigateUrl = DevExpressHelper.GetUrl(new { Controller = "MyDepatment", Action = "MyDepatmentControl", Area = "Agents" }) + "?id=" + id;
            s.Properties.Target = "_blank";
            s.ToolTip = "Данные о предприятии";

        }).Render());
    colWho.Settings.AllowAutoFilter = DefaultBoolean.True;
           
    MVCxGridViewColumn colWhom = settings.Columns.Add("AgentToName", "Кому");
    colWhom.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    colWhom.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    colWhom.Width = 450;

    settings.ClientSideEvents.ColumnResizing = "function (s, e) {if (e.column.name == 'colImageAction') {e.cancel = true;}}";
    settings.CustomCallback = (sender, e) =>
    {
        MVCxGridView grid = (MVCxGridView)sender;
        string refreshArg = e.Parameters.Split('&').FirstOrDefault(s => s.StartsWith("refresh"));
        bool refresh = (refreshArg != null) && (refreshArg.EndsWith("true"));
        if (refresh)
        {
            DataTable tbl = PriceListHelper.GetDocumentsInd(Folder.CODE_FIND_PRICES_IND, true, 5, State.STATEACTIVE);
            tbl.DefaultView.RowFilter = "StateId<>5";
            
            grid.DataSource = tbl.DefaultView.ToTable();
        }
        grid.DataBind();
    };

}).Bind(Model).GetHtml()