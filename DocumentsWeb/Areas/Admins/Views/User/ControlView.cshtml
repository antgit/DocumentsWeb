@using BusinessObjects
@using BusinessObjects.Security
@using BusinessObjects.Web.Core
@using System.Web.UI.WebControls
@using DocumentsWeb.Models
@using DocumentsWeb.Areas.Agents.Models
@using DocumentsWeb.Areas.Analitics.Models
@using DocumentsWeb.Controllers
@using DocumentsWeb.Areas.General.Models
@model UserModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Данные пользователя - " + Model.Name;
    bool haveEdit = !Model.IsReadOnly && WADataProvider.LibrariesElementRightView.IsAllow(Right.UIEDIT, WebModuleNames.WEB_ADMINUSERS) && !WADataProvider.CommonRightView.ReadOnly;
}
<script src="@Url.Content("~/Scripts/jUserActionsView.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jErrorPanelActions.js")" type="text/javascript"></script>
<script type="text/javascript">
     $(document).ready(function () {
    $(".triggerError").click(function () {
        $(".panelError").toggle("fast");
        $(this).toggleClass("active");
        return false;
    });
});
     
     function gvUserGroups_SelectionChanged(s, e) {
        var id = s.GetRowKey(e.visibleIndex);

        $.post('@Url.Action("IncludeUserInGroup")/?time=' + new Date().getTime(),
                { userId:@Model.Id, groupId:id, include:e.isSelected }
            ).success(function () {
                //alert("Настройки сохранены");
            });
    }
         function onShowPassClick(e) {
    $("#passwordLabel").hide();
    Password.SetVisible(true);
    Password.Focus();
}

function OnPassLostFocus(s, e) {
            s.SetVisible(false);
        $("#passwordLabel").show();
//    if (!s.GetValue()) {
//        s.SetVisible(false);
//        $("#passwordLabel").show();
//    }
}
</script>
@Html.DevExpress().Menu(mnuSettings =>
                        {
                            mnuSettings.EnableHotTrack = true;
                            mnuSettings.Name = "menuUiViewUsers";
                            mnuSettings.ClientSideEvents.ItemClick = "OnViewUserControlMenuItemClick";
                            mnuSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

                            mnuSettings.Items.Add(item =>
                                {
                                    item.Name = "mnuClose";
                                    item.Text = "Закрыть";
                                    item.ToolTip = "Закрыть текущее окно или страницу";
                                    item.Image.Url = @Url.Content("~/Images/cross.png");
                                });

                            if (haveEdit)
                            {
                                mnuSettings.Items.Add(item =>
                                    {
                                        item.Name = "mnuSave";
                                        item.Text = "Сохранить";
                                        item.ToolTip = "Сохранить текущий документ возможно если заполнены все необходимые данные, требуемые для корректного оформления документа. Для больших документов рекомендуется сохраняться как можно чаще";
                                        item.ClientEnabled = !Model.IsReadOnly;
                                        item.Image.Url = @Url.Content("~/Images/SAVE_X16.png");
                                    });
                            }
                        }).GetHtml()

@Html.DevExpress().Splitter(settings =>
{
    settings.Name = "splFullScreenMode";
    settings.Orientation = Orientation.Vertical;
    settings.Styles.Pane.Paddings.Padding = 0;
    settings.FullscreenMode = true;
    settings.Panes.Add(contentMain =>
    {
        contentMain.ScrollBars = ScrollBars.Auto;
        contentMain.Panes.Add(actionsPane =>
        {
            actionsPane.Name = "ActionPane";
            actionsPane.Size = 270;
            actionsPane.MinSize = 270;
            actionsPane.MaxSize = 400;
            actionsPane.AllowResize = DefaultBoolean.True;
            actionsPane.ShowCollapseBackwardButton = DefaultBoolean.False;
            actionsPane.SetContent(() => Html.RenderPartial("ControlActionsPartial", Model));
        });
        contentMain.Panes.Add(actionsPane =>
        {
            actionsPane.Name = "actionPane";
            actionsPane.ScrollBars = ScrollBars.Auto;
            actionsPane.SetContent(() =>
                {
                    using (Html.BeginForm("ControlView", "User", FormMethod.Post, new { @class = "edit_form", @id = "editForm" }))
                    {
                        @Html.DevExpress().NavBar(
                            nbSettings =>
                                {
                                    nbSettings.Name = "nbDocFeatures";
                                    nbSettings.AllowExpanding = true;
                                    nbSettings.AllowSelectItem = true;
                                    nbSettings.AutoCollapse = true;
                                    nbSettings.EnableHotTrack = true;
                                    nbSettings.EnableAnimation = true;
                                    nbSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    nbSettings.Height = System.Web.UI.WebControls.Unit.Percentage(100);
                                    nbSettings.EncodeHtml = false;

                                    if (!ViewContext.ViewData.ModelState.IsValid)
                                    {
                                        nbSettings.Groups.Add(group =>
                                            {
                                                group.Text = "Ошибки!";
                                                group.HeaderStyle.Font.Bold = true;
                                                group.HeaderImage.Url = Url.Content("~/Images/ERROR_X16.png");

                                                group.SetContentTemplateContent(c => ViewContext.Writer.Write(@Html.ValidationSummary(false).ToHtmlString()));
                                            });
                                    }

                                    nbSettings.Groups.Add(group =>
                                        {
                                            group.Text = string.Format("Пользователь - {0}", Model.Name);
                                            group.HeaderStyle.Font.Bold = true;

                                            group.Expanded = true;
                                            group.HeaderStyle.HoverStyle.Font.Underline = true;
                                            group.HeaderImage.Url = Url.Content("~/Images/users.png");

                                            group.SetContentTemplateContent(c => Html.RenderPartial("PageMainPartial", Model));
                                        });

                                    nbSettings.Groups.Add(group =>
                                    {
                                        group.Text = "Группы";
                                        group.HeaderStyle.Font.Bold = true;

                                        group.Expanded = false;
                                        group.HeaderStyle.HoverStyle.Font.Underline = true;
                                        group.HeaderImage.Url = Url.Content("~/Images/DOCUMENTDONE_X16.png");
                                        group.SetContentTemplateContent(c => Html.RenderPartial("UserGroupsPartial", Model));
                                    });

                                    nbSettings.Groups.Add(group =>
                                    {
                                        group.Text = "Свойства";
                                        group.HeaderStyle.Font.Bold = true;

                                        group.Expanded = false;
                                        group.HeaderStyle.HoverStyle.Font.Underline = true;
                                        group.HeaderImage.Url = Url.Content("~/Images/property.png");

                                        group.SetContentTemplateContent(c => Html.RenderPartial("PreviewSystemPartial", Model));
                                    });

                                }).Render();

                    }
                });
        });
        
    });

    settings.Panes.Add(footerPane =>{
        footerPane.Size = 80;
        footerPane.AllowResize = DefaultBoolean.False;
        footerPane.ShowSeparatorImage = DefaultBoolean.False;
        footerPane.SetContent(() => @Html.RenderPartial("FooterPartial"));
    });
}).GetHtml()





