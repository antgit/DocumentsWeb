@using BusinessObjects
@using BusinessObjects.Security
@using BusinessObjects.Web.Core
@using DocumentWeb.Extentions
@using DocumentsWeb.Models
@{   
    bool haveCreate = WADataProvider.LibrariesElementRightView.IsAllow(Right.UICREATE, WebModuleNames.WEB_ADMINUSERS);
    bool haveEdit = WADataProvider.LibrariesElementRightView.IsAllow(Right.UIEDIT, WebModuleNames.WEB_ADMINUSERS);
    bool haveDelete = WADataProvider.LibrariesElementRightView.IsAllow(Right.UITRASH, WebModuleNames.WEB_ADMINUSERS);
    bool haveView = WADataProvider.LibrariesElementRightView.IsAllow(Right.UIVIEW, WebModuleNames.WEB_ADMINUSERS);

    string helpDefaultLink = string.Empty;
    if (ViewData.ContainsKey("HelpDefaultLink"))
    {
        helpDefaultLink = ViewData["HelpDefaultLink"].ToString();
    }
}
<script src="@Url.Content("~/Scripts/jUserActions.js")" type="text/javascript"></script>
<script type="text/javascript">
    var controllerName = 'User';

    function deleteRow(visibleId) {
        if (confirm("Удалить?")) {
            var url = controllerName + "/Delete?Id=" + dxGridViewAnalitic.GetRowKey(visibleId);
            $.get(url, function (data) {
            }).success(function () {
                dxGridViewAnalitic.PerformCallback('refresh=true');
            });
        }
    }
</script>

<div id="divActions" style="width: 100%; height: 100%; overflow: auto;">
@Html.DevExpress().NavBar(
nbsettings =>
{
    nbsettings.Name = "nbFeatures";
    nbsettings.AllowExpanding = true;
    nbsettings.AllowSelectItem = true;
    nbsettings.AutoCollapse = false;
    nbsettings.EnableHotTrack = true;
    nbsettings.EnableAnimation = true;
    nbsettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    nbsettings.Height = System.Web.UI.WebControls.Unit.Percentage(100);
    nbsettings.EncodeHtml = false;
    nbsettings.SaveStateToCookies = true;
    nbsettings.SaveStateToCookiesID = Url.RequestContext.RouteData.Values["controller"] + "Nav";
    
    nbsettings.Groups.Add(group => {
        group.Text = "Пользователи";
        group.HeaderStyle.Font.Bold = true;
        group.ItemLinkMode = GroupItemLinkMode.TextAndImage;
        group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
        group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
        group.ItemStyle.CssClass = "navpanellink";
        group.HeaderImage.Url = Url.Content("~/Images/okey_x16.png");
        MVCxNavBarItem item = null;

        item = group.Items.Add("Помощь", "mnuActionHelp", "~/Images/INFO_X16.png");
        item.ToolTip = "Показать справочную информацию";
        item.Image.Url = "~/Images/INFO_X16.png";
        if (string.IsNullOrEmpty(helpDefaultLink))
            item.NavigateUrl = "javascript:alert('Справочная информация отсутствует!');";
        else
        {
            item.Target = "_blank";
            item.NavigateUrl = helpDefaultLink.StartsWith("~/") ? Url.Content(helpDefaultLink) : helpDefaultLink;
        }
        
        item = group.Items.Add("Создать", "mnuAdd", "~/Images/new_x16.png");
        item.ClientEnabled = haveCreate;
        item.NavigateUrl = "javascript:ShowPopupEdit(0);";
        item.ToolTip = "Создать нового пользователя";

        item = group.Items.Add("Создать копию", "mnuAddCopy", "~/Images/copy_x16.png");
        item.ClientEnabled = haveCreate;
        item.NavigateUrl = "javascript:UserCreateCopy('User');";
        item.ToolTip = "Создание копии текущего выделенного в списке пользователя";
                    
        item = group.Items.Add("Изменить", "mnuEdit", "~/Images/editdoc_x16.png");
        item.ClientEnabled = haveEdit;
        item.NavigateUrl = "javascript:ControlUser();";
        item.ToolTip = "Изменить данные о текущем пользователе";

        if (haveView)
        {
            item = group.Items.Add("Просмотр", "mnuPreview", "~/Images/editdocalice_x16.png");
            item.NavigateUrl = "javascript:previewRow();";
            item.ToolTip = "Просмотр данных о пользователе";
        }

        item = group.Items.Add("Удалить", "mnuDelete", "~/Images/delete_x16.png");
        item.ClientEnabled = haveDelete;
        item.NavigateUrl = "javascript:deleteUser('User');";
        item.ToolTip = "Удалить данные о текущем пользователе";

        item = group.Items.Add("Обновить", "mnuRefresh", "~/Images/refresh_x16.png");
        item.ToolTip = "Обновить данные в списке пользователей. Рекомендуемое действие вместо обновления страницы.";
        item.NavigateUrl = "javascript:dxGridViewUsers.PerformCallback('refresh=true');";

        group.Items.Add(i => i.SetTemplateContent(s => ViewContext.Writer.Write("<hr>")));

        item = group.Items.Add("Подключенные пользователи", "mnuViewConnectedUsers", "~/Images/user-gray.png");
        item.ToolTip = "Список пользователей сайта активных в текущий момент.";
        item.NavigateUrl = Url.Action("Index", new { Controller = "ConnectedUser" });

        group.Items.Add(i => i.SetTemplateContent(s => ViewContext.Writer.Write("<hr>")));
        
        item = group.Items.Add("Установить состояние \"Активен\"", "mnuStateActive", "~/Images/state_active_x16.png");
        item.ToolTip = "Установка данного состояния возможная только при текущем состоянии не соответствующего \"Активному\" - например данное действие имеет смысл для требующих корректировки, запрещенных или удаленных пользователей";
        item.ClientEnabled = haveEdit;
        item.NavigateUrl = "javascript:UserChangeState(1, 'User');";

        item = group.Items.Add("Требовать корректировки", "mnuStateNeedCorrect", "~/Images/state_needcorrect_x16.png");
        item.ToolTip = "Установка данного состояния возможная только при текущем состоянии не соответствующего \"Требовующего корректировки\" - например данное действие имеет смысл для ативных корреспондентов, чтобы в дальшейшем откорректировать пользователя. В данном состоянии пользователю будет предложено отредактировать собственные данные!";
        item.ClientEnabled = haveEdit;
        item.NavigateUrl = "javascript:UserChangeState(2, 'User');";

        item = group.Items.Add("\"Запрещен\"", "mnuStateBan", "~/Images/state_ban_x16.png");
        item.ToolTip = "Установка данного состояния возможная только при текущем состоянии не соответствующего \"Запрещеному\" - например данное действие имеет смысл для для блокировки пользователя по каким-либо причинам. В данном состоянии пользовать не может войти в систему!";
        item.ClientEnabled = haveEdit;
        item.NavigateUrl = "javascript:UserChangeState(4, 'User');";
    });

    nbsettings.Groups.Add(group => {
        group.Text = "Фильтр";
        group.Expanded = false;
        group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
        group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
        MVCxNavBarItem item = null;
        group.ItemStyle.HoverStyle.Font.Bold = true;
        group.ItemStyle.HoverStyle.Font.Underline = true;
        group.ItemStyle.SelectedStyle.Font.Bold = true;

        item = group.Items.Add("Только активные", "mnuFilterActive", "~/Images/filter_state_active_x16.png");
        item.ToolTip = "Отображать в списке только активные данные";
        item.NavigateUrl = "javascript:dxGridViewUsers.ApplyFilter('StateId = 1');";
        
        item = group.Items.Add("Требующие корректировки", "mnuFilterCorrect", "~/Images/filter_state_needcorrect_x16.png");
        item.ToolTip = "Отображать в списке только требующие корректировки данные";
        item.NavigateUrl = "javascript:dxGridViewUsers.ApplyFilter('StateId = 2');";
        
        item = group.Items.Add("Только запрещенные", "mnuFilterBan", "~/Images/filter_state_ban_x16.png");
        item.ToolTip = "Отображать в списке только требующие запрещенные данные";
        item.NavigateUrl = "javascript:dxGridViewUsers.ApplyFilter('StateId = 4');";
        
        item = group.Items.Add("Корзина", "mnuFilterDeleted", "~/Images/filter_state_deleted_x16.png");
        item.ToolTip = "Отображать в списке только удаленные данные";
        item.NavigateUrl = "javascript:dxGridViewUsers.ApplyFilter('StateId = 5');";
    });
    nbsettings.Groups.Add(group =>
    {
        group.Text = "Отчеты";
        group.Expanded = false;
        group.ItemLinkMode = GroupItemLinkMode.TextAndImage;
        group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
        group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
        group.ItemStyle.CssClass = "navpanellink";
        MVCxNavBarItem item = null;

        item = group.Items.Add("Microsoft Excel", "mnuExportToXLSX", "~/Images/FILEEXCEL_X16.png");
        item.ToolTip = "Экспорт списка пользователей в Microsoft Excel";
        item.NavigateUrl = DevExpressHelper.GetUrl(new { Controller = "User", Action = "ExportTo", type = "XLSX", subtype = Url.RequestContext.RouteData.Values["action"] });
        
        item = group.Items.Add("Adobe PDF", "mnuExportToPDF", "~/Images/FILEPDF_X16.png");
        item.ToolTip = "Экспорт списка пользователей в Adobe PDF";
        item.NavigateUrl = DevExpressHelper.GetUrl(new { Controller = "User", Action = "ExportTo", type = "PDF", subtype = Url.RequestContext.RouteData.Values["action"] });

        item = group.Items.Add("Перейти в отчеты...", "mnuReportNavToReportsMain", "~/Images/arrowgreen.png");
        item.ToolTip = "Перейти в раздел отчетов...";
        //item.ClientEnabled = haveEdit;
        item.NavigateUrl = Url.Action("Index", new { area = "Reports", Controller = "Report" });
    });
    nbsettings.Groups.Add(group =>
    {
        group.Text = "Сервис";
        group.Name = "grpSettings";
        group.ItemLinkMode = GroupItemLinkMode.TextAndImage;
        group.ItemStyle.CssClass = "navpanellink";

        group.SetContentTemplateContent(c => Html.RenderPartial("SettingsPartial", new ViewDataDictionary { { "GridName", "dxGridViewUsers" } }));
    });
}).GetHtml()
</div>