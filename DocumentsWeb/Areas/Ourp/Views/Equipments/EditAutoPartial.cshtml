@using DevExpress
@using DevExpress.Web
@using DevExpress.Utils
@using DevExpress.Web.Mvc
@using DevExpress.Web.Mvc.UI
@using System.Web.UI.WebControls;
@using BusinessObjects;
@using DocumentsWeb.Areas.Ourp.Models;
@model DocumentsWeb.Areas.Ourp.Models.EquipmentModel

<script type="text/javascript">
	$(document).ready(function () {
		Name.Focus();
	});
</script>

@{
	
	//List<Equipment> list = new List<Equipment>();
	//list = DocumentsWeb.Models.WADataProvider.WA.GetCollection<Equipment>().Where(w => w.KindId == Equipment.KINDVALUE_EQUIPMENT_ITEM && w.StateId != State.STATEDELETED).OrderByDescending(f => f.Code).ToList();
	//list = Chain<Equipment>.GetChainSourceList(eq, 110, State.STATEACTIVE).OrderByDescending(f => f.Code).ToList();

	
	//string modelcode = "";
	//int maxnom = 0;
	//if (string.IsNullOrEmpty(Model.Code))
	//{
	//    int parentid = 0;
	//    if (Model.ParentId == 0)
	//    {
	//        Equipment bufeq = DocumentsWeb.Models.WADataProvider.WA.GetObject<Equipment>(Model.Id);
	//        List<Equipment> buflist = Chain<Equipment>.DestinationList(bufeq, 110, State.STATEACTIVE);
	//        parentid = buflist[0].Id;
	//    }
	//    else
	//    {
	//        parentid = Model.ParentId;
	//    }

	//    Equipment eq = DocumentsWeb.Models.WADataProvider.WA.GetObject<Equipment>(parentid);
	//    List<Equipment> list = Chain<Equipment>.GetChainSourceList(eq, 110, State.STATEACTIVE).OrderByDescending(f => f.Code).ToList();
	//    if (list.Count > 0)
	//    {
	//        maxnom = int.Parse(string.IsNullOrEmpty(list[0].Code) ? "000" : list[0].Code);
	//        maxnom++;
	//    }
	//    modelcode = maxnom < 10 ? "00" + maxnom.ToString() : maxnom < 100 ? "0" : maxnom.ToString();
	//}
	//else
	//{
	//    modelcode = Model.Code;
	//}
}

<table style="width: 500px; height: 100%;">
    <tr>
        <td style="width: 100px;">
            @Html.DevExpress().Label(s =>
	   {
		   s.ControlStyle.CssClass = "label";
		   s.Text = "Код:";
		   s.AssociatedControlName = GlobalPropertyNames.Code;
	   }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().TextBox(s =>
	   {
		   s.Name = GlobalPropertyNames.Code;
		   s.ReadOnly = true;
		   s.ControlStyle.CssClass = "editor";
		   s.Width = System.Web.UI.WebControls.Unit.Percentage(100);
	   }).Bind(Model.Code).GetHtml()
        </td>
    </tr>
    <tr>
        <td style="width: 100px;">
            @Html.DevExpress().Label(s =>
	   {
		   s.ControlStyle.CssClass = "label";
		   s.Text = "Наименование:";
		   s.AssociatedControlName = GlobalPropertyNames.Name;
	   }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().TextBox(s =>
	   {
		   s.Name = GlobalPropertyNames.Name;
		   s.ReadOnly = Model.IsSystem | Model.IsReadOnly;
		   s.Width = System.Web.UI.WebControls.Unit.Percentage(100);
		   s.ControlStyle.CssClass = "editor";
		   s.Width = System.Web.UI.WebControls.Unit.Percentage(100);
	   }).Bind(Model.Name).GetHtml()
        </td>
    </tr>
	<tr>
        <td style="width: 100px;">
            @Html.DevExpress().Label(s =>
	   {
		   s.ControlStyle.CssClass = "label";
		   s.Text = "Тип ТС:";
		   s.AssociatedControlName = GlobalPropertyNames.AutoTypeId;
	   }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().ComboBox(s => {
                s.ControlStyle.CssClass = "editor";
				s.Name = "AutoTypeId";
                s.Style.Add("display", "inline");
                s.Properties.ValueField = GlobalPropertyNames.Id;
                s.Properties.TextField = GlobalPropertyNames.Name;
                s.Properties.ValueType = typeof(int);
                s.Properties.NullDisplayText = "Выберите тип транспортного средства...";
                s.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                s.ShowModelErrors = true;
				s.Properties.ValidationSettings.ErrorDisplayMode = DevExpress.Web.ASPxEditors.ErrorDisplayMode.ImageWithText;
				s.Properties.ValidationSettings.ErrorTextPosition = DevExpress.Web.ASPxClasses.ErrorTextPosition.Bottom;
				//s.Properties.ClientSideEvents.GotFocus = "OnEditorGotFocus";
				//s.Properties.ClientSideEvents.LostFocus = "OnEditorLostFocus";
			}).BindList(DocumentsWeb.Areas.Analitics.Models.AnaliticModel.GetCollection("SYSTEM_AUTO_TYPE")).Bind(Model.AutoTypeId == 0 ? null : (int?)Model.AutoTypeId).GetHtml()
        </td>
    </tr>
    <tr>
        <td style="width: 100px;">
            @Html.DevExpress().Label(s =>
	   {
		   s.ControlStyle.CssClass = "label";
		   s.Text = "Примечание:";
		   s.AssociatedControlName = GlobalPropertyNames.Memo;
	   }).GetHtml()
        </td>
        <td>
           @Html.DevExpress().Memo(s =>
            {
                s.Name = GlobalPropertyNames.Memo;
                s.Properties.NullText = "Введите примечание или описание документа...";
                s.ControlStyle.CssClass = "editor";
                s.Height = System.Web.UI.WebControls.Unit.Pixel(40);
                s.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                s.ClientEnabled = !Model.IsReadOnly;
            }).Bind(Model.Memo).GetHtml()
        </td>
    </tr>
</table>