@using DevExpress
@using DevExpress.Web
@using DevExpress.Utils
@using DevExpress.Web.Mvc
@using DevExpress.Web.Mvc.UI
@using System.Web.UI.WebControls;
@using BusinessObjects;
@model DocumentsWeb.Areas.Ourp.Models.EquipmentWorkShopModel

<script type="text/javascript">
	$(document).ready(function () {
		Name.Focus();
	});
</script>

@{
	//string modelcode = "";
	//int maxnom = 0;
	//if(string.IsNullOrEmpty(Model.Code))
	//{
	//    List<EquipmentDetail> list = new List<EquipmentDetail>();
	//    list = DocumentsWeb.Models.WADataProvider.WA.GetCollection<EquipmentDetail>().Where(w => w.KindId == EquipmentDetail.KINDID_WORKSHOP && w.StateId != State.STATEDELETED).OrderByDescending(f => f.Code).ToList();
	//    if (list.Count > 0)
	//    {
	//        maxnom = int.Parse(string.IsNullOrEmpty(list[0].Code) ? "00" : list[0].Code);
	//        maxnom++;
	//    }
	//    modelcode = maxnom < 10 ? "0" + maxnom.ToString() : maxnom.ToString();
	//}
	//else
	//{
	//    modelcode = Model.Code;
	//}
}

<table style="width: 400px; height: 100%; padding-top: 30px;">
    <tr>
        <td style="width: 100px;">
            @Html.DevExpress().Label(s =>
            {
                s.ControlStyle.CssClass = "label";
                s.Text = "Код:";
                s.AssociatedControlName = GlobalPropertyNames.Code;
            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().TextBox(s =>
            {
                s.Name = GlobalPropertyNames.Code;
                s.ReadOnly = true;
                s.ControlStyle.CssClass = "editor";
                s.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			}).Bind(Model.Code).GetHtml()
        </td>
    </tr>
    <tr>
        <td style="width: 100px;">
            @Html.DevExpress().Label(s =>
            {
                s.ControlStyle.CssClass = "label";
                s.Text = "Наименование:";
                s.AssociatedControlName = GlobalPropertyNames.Name;
            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().TextBox(s =>
            {
                s.Name = GlobalPropertyNames.Name;
                s.ReadOnly = Model.IsSystem | Model.IsReadOnly;
                s.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                s.ControlStyle.CssClass = "editor";
                s.Width = System.Web.UI.WebControls.Unit.Percentage(100);
            }).Bind(Model.Name).GetHtml()
        </td>
    </tr>
    <tr>
        <td style="width: 100px;">
            @Html.DevExpress().Label(s =>
            {
                s.ControlStyle.CssClass = "label";
                s.Text = "Примечание:";
                s.AssociatedControlName = GlobalPropertyNames.Memo;
            }).GetHtml()
        </td>
        <td>
           @Html.DevExpress().Memo(s =>
            {
                s.Name = GlobalPropertyNames.Memo;
                s.Properties.NullText = "Введите примечание или описание документа...";
                s.ControlStyle.CssClass = "editor";
                s.Height = System.Web.UI.WebControls.Unit.Pixel(40);
                s.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                s.ClientEnabled = !Model.IsReadOnly;
            }).Bind(Model.Memo).GetHtml()
        </td>
    </tr>
</table>