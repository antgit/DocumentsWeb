@using BusinessObjects
@using BusinessObjects.Security
@using BusinessObjects.Web.Core
@using DocumentWeb.Extentions
@using DocumentsWeb.Models
@using DocumentsWeb.Controllers;
@using DocumentsWeb.Areas.General.Models;
@using DevExpress.Web.Mvc.UI;
@using DevExpress.Web.Mvc;
@using DevExpress.Web.ASPxEditors;
@using DevExpress.Web.ASPxClasses;
@using DevExpress.Utils;
@using DevExpress.Web.ASPxNavBar;

@{   
	bool haveCreateWorkShop = true; //WADataProvider.LibrariesElementRightView.IsAllow(Right.UICREATE, WebModuleNames.WEB_BANKS) && !WADataProvider.CommonRightView.ReadOnly;
	bool haveCreate = true; //WADataProvider.LibrariesElementRightView.IsAllow(Right.UICREATE, WebModuleNames.WEB_BANKS) && !WADataProvider.CommonRightView.ReadOnly;
    bool haveEdit = true; //WADataProvider.LibrariesElementRightView.IsAllow(Right.UIEDIT, WebModuleNames.WEB_BANKS) && !WADataProvider.CommonRightView.ReadOnly;
    bool haveDelete = true;//WADataProvider.LibrariesElementRightView.IsAllow(Right.UITRASH, WebModuleNames.WEB_BANKS) && !WADataProvider.CommonRightView.ReadOnly;
    bool haveView = true;//WADataProvider.LibrariesElementRightView.IsAllow(Right.UIVIEW, WebModuleNames.WEB_BANKS) && !WADataProvider.CommonRightView.ReadOnly;
    string HelpDefaultLink = string.Empty;
    if (ViewData.ContainsKey("HelpDefaultLink"))
    {
        HelpDefaultLink = ViewData["HelpDefaultLink"].ToString();
    }
}
<!--<script src="@Url.Content("~/Scripts/ourp/jEquipmentsActions.js")" type="text/javascript"></script>-->
<div id="divHeader" style="width: 100%;">
    @Html.DevExpress().NavBar(settings =>
    {
        settings.Name = "nbFeaturesHeader";
        settings.AllowExpanding = false;
        settings.AllowSelectItem = false;
        settings.AutoCollapse = false;
        settings.EnableHotTrack = false;
        settings.EnableAnimation = false;
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.Height = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.EncodeHtml = false;
        settings.SaveStateToCookies = true;
        settings.SaveStateToCookiesID = Url.RequestContext.RouteData.Values["controller"] + "Nav";
        settings.Groups.Add(group =>
        {
            group.ShowExpandButton = DefaultBoolean.False;
            group.SetHeaderTemplateContent(head =>
            {
                ViewContext.Writer.Write("<table width=\"100%\"><tr><td>");
                ViewContext.Writer.Write("<div style=\"width: 100%; text-align: center;\">");
                Html.DevExpress().Label(lb =>
                {
                    lb.ControlStyle.Font.Bold = true;
                    lb.ControlStyle.Font.Size = System.Web.UI.WebControls.FontUnit.Point(10);
                    lb.Text = "Образ оборудования";
                }).Render();
                ViewContext.Writer.Write("</div>");
                
                ViewContext.Writer.Write("</td><td style=\"width:16px\">");
                Html.DevExpress().HyperLink(s =>
                {
                    s.ToolTip = "Показать справочную информацию";
                    s.Properties.ImageUrl = "~/Images/INFO_X16.png";
                    if (string.IsNullOrEmpty(HelpDefaultLink))
                        s.NavigateUrl = "javascript:alert('Справочная информация отсутствует!');";
                    else
                    {
                        s.Properties.Target = "_blank";
                        s.NavigateUrl = HelpDefaultLink.StartsWith("~/") ? Url.Content(HelpDefaultLink) : HelpDefaultLink;
                    }
                }).Render();
                
                ViewContext.Writer.Write("</td><td style=\"width:16px\">");
                Html.DevExpress().HyperLink(s =>
                {
                    s.Properties.Style.Font.Bold = true;
                    s.Properties.Text = "<<";
                    s.ToolTip = "Скрыть панель управления";
                    //s.Properties.ImageUrl = "~/Images/collapse_arrow_x16.png";
                    s.NavigateUrl = "javascript:CollapseActionsPane()";
                }).Render();
                ViewContext.Writer.Write("</tr></td></table>");
            });
        });
    }).GetHtml()
</div>
<div id="divActions" style="width: 100%; height: 100%; overflow: auto;">
@Html.DevExpress().NavBar(
nbsettings =>
{
    nbsettings.Name = "nbFeatures";
    nbsettings.AllowExpanding = true;
    nbsettings.AllowSelectItem = true;
    nbsettings.AutoCollapse = false;
    nbsettings.EnableHotTrack = true;
    nbsettings.EnableAnimation = true;
    nbsettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    //nbsettings.Height = System.Web.UI.WebControls.Unit.Percentage(100);
    nbsettings.EncodeHtml = false; 
    nbsettings.SaveStateToCookies = true;
    nbsettings.SaveStateToCookiesID = Url.RequestContext.RouteData.Values["controller"] + "Nav";

	nbsettings.Groups.Add(group => {
        group.Text = "Разделы";
        group.ItemLinkMode = GroupItemLinkMode.TextAndImage;
        group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
        group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
        group.ItemStyle.CssClass = "navpanellink";
        MVCxNavBarItem item = null;

		item = group.Items.Add("Образ оборудования", "mnuOO", "~/Images/UNIT_X16.png");
		item.NavigateUrl = DevExpressHelper.GetUrl(new { Controller = "ViewListEquipments", Action = "Index", Area = "Ourp" });
		item.ToolTip = "Образ оборудования";

		item = group.Items.Add("Основные средства", "mnuOS", "~/Images/UNIT_X16.png");
		item.NavigateUrl = DevExpressHelper.GetUrl(new { Controller = "Auto", Action = "Index", Area = "Ourp" });
		item.ToolTip = "Основные средства";

		item = group.Items.Add("Документы", "mnuD", "~/Images/UNIT_X16.png");
		//item.NavigateUrl = DevExpressHelper.GetUrl(new { Controller = "Auto", Action = "Index", Area = "Ourp" });
		item.ToolTip = "Документы";
	});

	nbsettings.Groups.Add(group =>
	{
		group.Text = "Действия";
		group.ItemLinkMode = GroupItemLinkMode.TextAndImage;
		group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
		group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
		group.ItemStyle.CssClass = "navpanellink";
		MVCxNavBarItem item = null;

		if (haveCreateWorkShop)
		{
			item = group.Items.Add("Создать цех", "mnuAddWS", "~/Images/new_x16.png");
			item.ClientEnabled = haveCreateWorkShop;
			//item.NavigateUrl = "javascript:ShowPopupEdit(0);";
			item.ToolTip = "Создать цех";
		}

		if (haveCreate)
		{
			item = group.Items.Add("Создать", "mnuAdd", "~/Images/new_x16.png");
			item.ClientEnabled = haveCreate;
			item.NavigateUrl = "javascript:ShowPopupEdit(0);";
			item.ToolTip = "Создать элемент";

			//item = group.Items.Add("Создать копию", "mnuAddCopy", "~/Images/copy_x16.png");
			//item.ClientEnabled = haveCreate;
			//item.NavigateUrl = "javascript:createCopy('Bank');";
			//item.ToolTip = "Создание копии текущего выделенного в списке банка";
		}

		if (haveEdit)
		{
			item = group.Items.Add("Изменить", "mnuEdit", "~/Images/editdoc_x16.png");
			item.ClientEnabled = haveEdit;
			item.NavigateUrl = "javascript:editEquipment();";
			item.ToolTip = "Изменить данные";
		}

		if (haveDelete)
		{
			item = group.Items.Add("Удалить", "mnuDelete", "~/Images/delete_x16.png");
			item.ClientEnabled = haveDelete;
			item.NavigateUrl = "javascript:deleteAgent('Bank');";
			item.ToolTip = "Удалить";
		}

		item = group.Items.Add("Обновить", "mnuRefresh", "~/Images/refresh_x16.png");
		item.ToolTip = "Обновить данные в списке корреспондентов. Рекомендуемое действие вместо обновления страницы.";
		item.NavigateUrl = "javascript:dxGridViewEquipments.PerformCallback('refresh=true');";

        @*if (haveEdit)
        {
            item = group.Items.Add();
            item.SetTemplateContent(s =>
                                        {
                                            ViewContext.Writer.Write("<hr>");
                                        });

            item = group.Items.Add("Установить состояние \"Активен\"", "mnuStateActive", "~/Images/state_active_x16.png");
            item.ToolTip = "Установка данного состояния возможная только при текущем состоянии не соответствующего \"Активному\" - например данное действие имеет смысл для требующих корректировки, запрещенных или удаленных корреспондентов";
            item.ClientEnabled = haveEdit;
            item.NavigateUrl = "javascript:changeState(1, 'Bank');";

            item = group.Items.Add("Требовать корректировки", "mnuStateNeedCorrect", "~/Images/state_needcorrect_x16.png");
            item.ToolTip = "Установка данного состояния возможная только при текущем состоянии не соответствующего \"Требовующего корректировки\" - например данное действие имеет смысл для ативных корреспондентов, чтобы в дальшейшем откорректировать корреспондента";
            item.ClientEnabled = haveEdit;
            item.NavigateUrl = "javascript:changeState(2, 'Bank');";

            item = group.Items.Add("\"Запрещен\"", "mnuStateBan", "~/Images/state_ban_x16.png");
            item.ToolTip = "Установка данного состояния возможная только при текущем состоянии не соответствующего \"Запрещеному\" - например данное действие имеет смысл для для блокировки корреспондента по каким-либо причинам";
            item.ClientEnabled = haveEdit;
            item.NavigateUrl = "javascript:changeState(4, 'Bank');";
        }*@
	});

    @*nbsettings.Groups.Add(group =>
    {
        group.Text = "Иерархия";
        group.Expanded = false;

        group.SetContentTemplateContent(content =>
        {
            /*CoreController<EquipmentDetail> controller = (CoreController<EquipmentDetail>)ViewContext.Controller;
            Html.RenderAction("GridFilterPartial", new
            {
                Area = "General",
                Controller = "Hierarchy",
                RootList = HierarchyModel.GetLinkedHierarchies(controller.RootHierachy, HierarchyModel.FILTER_HIERARCHY_CHAIN).Select(s => s.Code).ToArray(),
                GridName = "dxGridViewEquipments",
                GridController = "Bank",
                GridAction = "IndexPartial",
                Model = Model
            });*/
        });
    });*@
    
    @*nbsettings.Groups.Add(group => {
        group.Text = "Фильтр";
        group.Expanded = false;
        group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
        group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
        MVCxNavBarItem item = null;
        group.ItemStyle.HoverStyle.Font.Bold = true;
        group.ItemStyle.HoverStyle.Font.Underline = true;
        group.ItemStyle.SelectedStyle.Font.Bold = true;

        item = group.Items.Add("Только активные", "mnuFilterActive", "~/Images/filter_state_active_x16.png");
        item.ToolTip = "Отображать в списке только активные данные";
        item.NavigateUrl = "javascript:dxGridViewEquipments.ApplyFilter('StateId = 1');";
        
        item = group.Items.Add("Требующие корректировки", "mnuFilterCorrect", "~/Images/filter_state_needcorrect_x16.png");
        item.ToolTip = "Отображать в списке только требующие корректировки данные";
        item.NavigateUrl = "javascript:dxGridViewEquipments.ApplyFilter('StateId = 2');";
        
        item = group.Items.Add("Только запрещенные", "mnuFilterBan", "~/Images/filter_state_ban_x16.png");
        item.ToolTip = "Отображать в списке только требующие запрещенные данные";
        item.NavigateUrl = "javascript:dxGridViewEquipments.ApplyFilter('StateId = 4');";
        
        item = group.Items.Add("Корзина", "mnuFilterDeleted", "~/Images/filter_state_deleted_x16.png");
        item.ToolTip = "Отображать в списке только удаленные данные";
        item.NavigateUrl = "javascript:dxGridViewEquipments.ApplyFilter('StateId = 5');";
    });*@
    @*nbsettings.Groups.Add(group =>
    {
        group.Text = "Отчеты";
        group.Expanded = false;
        group.ItemLinkMode = GroupItemLinkMode.TextAndImage;
        group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
        group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
        group.ItemStyle.CssClass = "navpanellink";
        MVCxNavBarItem item = null;

        item = group.Items.Add("Microsoft Excel", "mnuExportToXLSX", "~/Images/FILEEXCEL_X16.png");
        item.ToolTip = "Экспорт списка документов в Microsoft Excel";
        item.NavigateUrl = DevExpressHelper.GetUrl(new {Controller = "Bank", Action = "ExportTo", type = "XLSX", subtype = Url.RequestContext.RouteData.Values["action"]});
        
        item = group.Items.Add("Adobe PDF", "mnuExportToPDF", "~/Images/FILEPDF_X16.png");
        item.ToolTip = "Экспорт списка документов в Adobe PDF";
        item.NavigateUrl = DevExpressHelper.GetUrl(new { Controller = "Bank", Action = "ExportTo", type = "PDF", subtype = Url.RequestContext.RouteData.Values["action"] });

        item = group.Items.Add("Перейти в отчеты...", "mnuReportNavToReportsMain", "~/Images/arrowgreen.png");
        item.ToolTip = "Перейти в раздел отчетов...";
        //item.ClientEnabled = haveEdit;
        item.NavigateUrl = Url.Action("Index", new { area = "Reports", Controller = "Report" });
    });*@
    @*nbsettings.Groups.Add(group =>
    {
        group.Text = "Сервис";
        group.Name = "grpSettings";
        group.ItemLinkMode = GroupItemLinkMode.TextAndImage;
        group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
        group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
        

        group.SetContentTemplateContent(c =>
        {
            Html.RenderPartial("SettingsPartial", new ViewDataDictionary { { "GridName", "dxGridViewEquipments" } });
        });
    });*@
}).GetHtml()
</div>