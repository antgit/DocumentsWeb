@using System.Globalization
@using BusinessObjects
@using DocumentsWeb.Code
@using DocumentsWeb.Models

@{
    bool haveCreate = WADataProvider.FolderElementRightView.IsAllow(BusinessObjects.Security.Right.DOCCREATE, WADataProvider.WA.GetFolderByCodeFind(Folder.CODE_FIND_CONTRACTS_PRINTER).Id);
    bool haveEdit = WADataProvider.FolderElementRightView.IsAllow(BusinessObjects.Security.Right.DOCEDIT, WADataProvider.WA.GetFolderByCodeFind(Folder.CODE_FIND_CONTRACTS_PRINTER).Id);
    bool haveDelete = WADataProvider.FolderElementRightView.IsAllow(BusinessObjects.Security.Right.DOCTRASH, WADataProvider.WA.GetFolderByCodeFind(Folder.CODE_FIND_CONTRACTS_PRINTER).Id);
    bool haveView = WADataProvider.FolderElementRightView.IsAllow(BusinessObjects.Security.Right.DOCVIEW, WADataProvider.WA.GetFolderByCodeFind(Folder.CODE_FIND_CONTRACTS_PRINTER).Id);
    
    int imageColumnWidth = 0;
    if (haveView || haveEdit)
    {
        imageColumnWidth += 20;
    }
    if (haveDelete)
    {
        imageColumnWidth += 20;
    }
}

@Html.DevExpress().GridView(settings=>{
    settings.Settings.ShowTitlePanel = true;
    settings.Name = "gvContractDocuments";
    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
    settings.SettingsBehavior.EnableCustomizationWindow = true;
    settings.SettingsPopup.CustomizationWindow.VerticalAlign = PopupVerticalAlign.Below;
    settings.SettingsPopup.CustomizationWindow.HorizontalAlign = PopupHorizontalAlign.OutsideRight;
    settings.Styles.AlternatingRow.Enabled = DefaultBoolean.True;

    settings.ClientSideEvents.Init = "function(s, e) { adjustSize(); }";
    settings.ClientSideEvents.EndCallback = "function(s, e) { adjustSize(); }";

    settings.CallbackRouteValues = new { Controller = "ViewListAccountingPrinters", Action = "IndexPartial" };
    settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ViewListAccountingPrinters", Action = "ToTrash" };
    
    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Hidden;
    settings.SettingsBehavior.AllowFocusedRow = true;
    settings.KeyFieldName = GlobalPropertyNames.Id;
    settings.Settings.ShowGroupPanel = LayoutHelper.GetCurrentSetting(Url.RequestContext.RouteData.Values["controller"].ToString()).Current.ShowGroupPanel;
    settings.Settings.ShowFooter = true;
    settings.Settings.ShowFilterRow = LayoutHelper.GetCurrentSetting(Url.RequestContext.RouteData.Values["controller"].ToString()).Current.ShowFilterPanel;
    settings.Settings.ShowFilterRowMenu = true;
    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Visible;
    settings.Settings.ShowVerticalScrollBar = true;
    settings.Settings.ShowHorizontalScrollBar = true;
    settings.Styles.Cell.Font.Size = System.Web.UI.WebControls.FontUnit.Point(11);
    settings.Styles.Cell.Paddings.Padding = System.Web.UI.WebControls.Unit.Pixel(2);
    settings.Styles.Cell.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    settings.Settings.VerticalScrollableHeight = 0;
    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;

    settings.SettingsPager.PageSize = Utils.GetPageSize(settings);
    settings.SettingsPager.Position = System.Web.UI.WebControls.PagerPosition.Top;
    settings.SettingsPager.AlwaysShowPager = true;
    settings.SetPagerBarTemplateContent(c => Html.RenderPartial("TablePager", new ViewDataDictionary
        {
            { "ContentObject", c },
            { "TableCaption", "<b><a href=\"" + Url.Action("Index", new { Controller = "Home", Action = "Index" }) + "\">Договора</a>\\Учет принтеров</b>" }
            
        }));                                 
    
    settings.Height = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100); //System.Web.UI.WebControls.Unit.Percentage(100);

    settings.Columns.Add(cc =>
    {
        cc.Name = "colImageAction";
        cc.Settings.AllowDragDrop = DefaultBoolean.False;
        cc.Settings.AllowSort = DefaultBoolean.False;
        cc.Width = System.Web.UI.WebControls.Unit.Pixel(imageColumnWidth);
        cc.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
        cc.SetDataItemTemplateContent(c =>
        {
            string icon = (int)DataBinder.Eval(c.DataItem, "StateId") == State.STATEACTIVE
                                ? Url.Content("~/Images/DOCUMENTDONE_X16.png")
                                : Url.Content("~/Images/DOCUMENTNOTDONE_X16.png");
            Html.DevExpress().HyperLink(hl =>
            {
                hl.Name = "PriceListEdit_" + c.ItemIndex.ToString(CultureInfo.InvariantCulture);
                hl.Properties.ImageUrl = icon;
                hl.ToolTip = "Просмотреть/Изменить";
                hl.NavigateUrl = DevExpressHelper.GetUrl(new { Controller = "AccountingPrinters", Action = "Edit", Id = c.KeyValue });
                hl.Properties.Target = "_blank";
                hl.ClientEnabled = haveEdit || haveView;
                hl.ClientVisible = haveEdit || haveView;
            }).Render();
            Html.DevExpress().HyperLink(hl =>
            {
                hl.Name = "PriceListDelete_" + c.ItemIndex.ToString(CultureInfo.InvariantCulture);
                hl.Properties.ImageUrl = Url.Content("~/Images/delete_x16.png");
                hl.ToolTip = "Удалить";
                hl.NavigateUrl = "javascript:if (confirm(\"Вы уверены, что хотите удалить этот документ?\")) {gvContractDocuments.DeleteRow(" + c.ItemIndex.ToString(CultureInfo.InvariantCulture) + ");}";
                hl.ClientVisible = haveDelete;
                hl.ClientEnabled = haveDelete;
            }).Render();
        });
    });
    
    settings.Columns.Add(column =>
    {
        column.FieldName = GlobalPropertyNames.Date;
        column.Caption = "Дата";
        column.Width = 70;
        column.PropertiesEdit.DisplayFormatString = "d";
        column.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
        column.ColumnType = MVCxGridViewColumnType.DateEdit;
    });
    MVCxGridViewColumn colNumber = settings.Columns.Add("DocNumber", "Номер");
    colNumber.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    colNumber.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    colNumber.Width = 70;

    settings.Columns.Add(column =>
    {
        column.FieldName = GlobalPropertyNames.AgentDepartmentFromId;
        column.Caption = "Кто";
        column.Width = 450;
        column.ColumnType = MVCxGridViewColumnType.HyperLink;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
        column.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left;
        HyperLinkProperties colProperties = column.PropertiesEdit as HyperLinkProperties;
        String urlFormatString = Url.Action("Preview", "MyDepatment", new RouteValueDictionary(new { Area = "Agents", id = "{0}" }));
        colProperties.NavigateUrlFormatString = HttpUtility.UrlDecode(urlFormatString);
        colProperties.Target = "_blank";
        colProperties.TextField = "AgentDepartmentFromName";
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = GlobalPropertyNames.AgentDepartmentToId;
        column.Caption = "Кому";
        column.Width = 450;
        column.ColumnType = MVCxGridViewColumnType.HyperLink;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
        column.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left;
        HyperLinkProperties colProperties = column.PropertiesEdit as HyperLinkProperties;
        String urlFormatString = Url.Action("Preview", "Byer", new RouteValueDictionary(new { Area = "Agents", id = "{0}" }));
        colProperties.NavigateUrlFormatString = HttpUtility.UrlDecode(urlFormatString);
        colProperties.Target = "_blank";
        colProperties.TextField = "AgentDepartmentToName";
    });

    MVCxGridViewColumn colRegname = settings.Columns.Add("RegistratorName", "Регистратор");
    colRegname.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    colRegname.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    colRegname.Width = 150;

    MVCxGridViewColumn colImportanceName = settings.Columns.Add("ImportanceName", "Приоритет");
    colImportanceName.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    colImportanceName.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    colImportanceName.Width = 150;

    MVCxGridViewColumn colKindName = settings.Columns.Add("ContractKindName", "Тип");
    colKindName.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    colKindName.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    colKindName.Width = 150;

    MVCxGridViewColumn colStateCurrentName = settings.Columns.Add("StateCurrentName", "Текущее состояние");
    colStateCurrentName.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    colStateCurrentName.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    colStateCurrentName.Width = 150;

    MVCxGridViewColumn colStateName = settings.Columns.Add("StateName", "Состояние");
    colStateName.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    colStateName.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    colStateName.Width = 150;

    MVCxGridViewColumn colDateStart = settings.Columns.Add("DateStart", "Действует с");
    colDateStart.ColumnType = MVCxGridViewColumnType.DateEdit;
    colDateStart.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    colDateStart.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    colDateStart.Width = 150;

    MVCxGridViewColumn colDateEnd = settings.Columns.Add("DateEnd", "Действует по");
    colDateEnd.ColumnType = MVCxGridViewColumnType.DateEdit;
    colDateEnd.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    colDateEnd.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    colDateEnd.Width = 150;
    
    settings.SettingsCookies.Enabled = true;
    settings.SettingsCookies.CookiesID = Url.RequestContext.RouteData.Values["controller"] + "Grid";
    settings.ClientSideEvents.ColumnResizing = "function (s, e) {if (e.column.name == 'colImageAction') {e.cancel = true;}}";
    settings.CustomCallback = (sender, e) =>
    {
        MVCxGridView grid = (MVCxGridView)sender;
        string refreshArg = e.Parameters.Split('&').FirstOrDefault(s => s.StartsWith("refresh"));
        bool refresh = (refreshArg != null) && (refreshArg.EndsWith("true"));
        if (refresh)
        {
            grid.DataSource = ContractsHelper.GetDocumentsAccountingPrinters(true);
            grid.DataBind();
        }
    };
}).Bind(Model).GetHtml()
