@using System.Globalization
@using DevExpress.Web.Mvc.UI
@using BusinessObjects
@using BusinessObjects.Security
@using BusinessObjects.Web.Core
@using DocumentsWeb.Areas.General.Models
@using DocumentsWeb.Controllers
@using DocumentsWeb.Models;

@{
    bool haveCreate = WADataProvider.LibrariesElementRightView.IsAllow(Right.UICREATE, WebModuleNames.WEB_UNIT) && !WADataProvider.CommonRightView.ReadOnly;
    bool haveEdit = WADataProvider.LibrariesElementRightView.IsAllow(Right.UIEDIT, WebModuleNames.WEB_UNIT) && !WADataProvider.CommonRightView.ReadOnly;
    bool haveDelete = WADataProvider.LibrariesElementRightView.IsAllow(Right.UITRASH, WebModuleNames.WEB_UNIT) && !WADataProvider.CommonRightView.ReadOnly;
    bool haveView = WADataProvider.LibrariesElementRightView.IsAllow(Right.UIVIEW, WebModuleNames.WEB_UNIT);
    string helpDefaultLink = string.Empty;
    if (ViewData.ContainsKey("HelpDefaultLink"))
    {
        helpDefaultLink = ViewData["HelpDefaultLink"].ToString();
    }
}
<script src="@Url.Content("~/Scripts/jUnitActions.js")" type="text/javascript"></script>
<script type="text/javascript">
    var controllerName = 'Unit';
</script>

<div id="divActions" style="width: 100%; height: 100%; overflow: auto;">
    @Html.DevExpress().NavBar(settings =>
    {
        settings.Name = "nbFeatures";
        settings.AllowExpanding = true;
        settings.AllowSelectItem = true;
        settings.AutoCollapse = false;
        settings.EnableHotTrack = true;
        settings.EnableAnimation = true;
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.EncodeHtml = false;
        settings.SaveStateToCookies = true;
        settings.SaveStateToCookiesID = Url.RequestContext.RouteData.Values["controller"] + "Nav";
        settings.Groups.Add(group => {
            group.Text = "Единицы измерения";
            group.ItemStyle.CssClass = "navpanellink";
            group.ItemLinkMode = GroupItemLinkMode.TextAndImage;
            group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
            group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
            
            MVCxNavBarItem item = group.Items.Add("Помощь", "mnuActionHelp", "~/Images/INFO_X16.png");
            item.ToolTip = "Показать справочную информацию";
            item.Image.Url = "~/Images/INFO_X16.png";
            if (string.IsNullOrEmpty(helpDefaultLink))
                item.NavigateUrl = "javascript:alert('Справочная информация отсутствует!');";
            else
            {
                item.Target = "_blank";
                item.NavigateUrl = helpDefaultLink.StartsWith("~/") ? Url.Content(helpDefaultLink) : helpDefaultLink;
            }

            if (haveCreate)
            {
                item = group.Items.Add("Создать", "mnuAdd", "~/Images/new_x16.png");
                item.NavigateUrl = "javascript:ShowPopupEdit(0);";
                item.ToolTip = "Создать новую единицу измерения";
                
                item = group.Items.Add("Создать копию", "mnuAddCopy", "~/Images/copy_x16.png");
                item.NavigateUrl = "javascript:UnitreateCopy();";
                item.ToolTip = "Создание копии текущей выделенной в списке единицы измерения";
            }

            if (haveView)
            {
                item = group.Items.Add("Изменить", "mnuPreview", "~/Images/editdoc_x16.png");
                item.NavigateUrl = "javascript:previewRow();";
                item.ToolTip = "Просмотр данных о аналитике";
            }

            if (haveDelete)
            {
                item = group.Items.Add("Удалить", "mnuDelete", "~/Images/delete_x16.png");
                item.NavigateUrl = "javascript:deleteRow();";
                item.ToolTip = "Удалить данные о текущей единице измерения";
            }
             
            item = group.Items.Add("Обновить", "mnuRefresh", "~/Images/refresh_x16.png");
            item.NavigateUrl = "javascript:dxGridViewUnits.PerformCallback('refresh=true');";
            item.ToolTip = "Обновить данные в списке валют. Рекомендуемое действие вместо обновления страницы.";

            if (haveEdit)
            {
                item = group.Items.Add();
                item.SetTemplateContent(s => ViewContext.Writer.Write("<hr>"));
                item = group.Items.Add("Установить состояние \"Активен\"", "mnuStateActive", "~/Images/state_active_x16.png");
                item.NavigateUrl = "javascript:UnitChangeState(" + State.STATEACTIVE.ToString(CultureInfo.InvariantCulture) + ");";
                item.ToolTip = "Установка данного состояния возможна только при текущем состоянии не соответствующего \"Активному\" - например данное действие имеет смысл для требующих корректировки, запрещенных или удаленных единиц измерения";
                
                item = group.Items.Add("Требовать корректировки", "mnuStateNeedCorrect", "~/Images/state_needcorrect_x16.png");
                item.NavigateUrl = "javascript:UnitChangeState(" + State.STATENOTDONE.ToString(CultureInfo.InvariantCulture) + ");";
                item.ToolTip = "Установка данного состояния возможна только при текущем состоянии не соответствующего \"Требовующего корректировки\" - например данное действие имеет смысл для активных единиц измерения, чтобы в дальшейшем откорректировать данные о единице измерения";
                
                item = group.Items.Add("\"Запрещен\"", "mnuStateBan", "~/Images/state_ban_x16.png");
                item.NavigateUrl = "javascript:UnitChangeState(" + State.STATEDENY.ToString(CultureInfo.InvariantCulture) + ");";
                item.ToolTip = "Установка данного состояния возможна только при текущем состоянии не соответствующего \"Запрещеному\" - например данное действие имеет смысл для для блокировки единицы измерения по каким-либо причинам";
            }
        });

        settings.Groups.Add(group =>
        {
            group.Text = "Иерархия";
            group.Expanded = false;
            group.HeaderImage.Url = Url.Content("~/Images/filter_nodes_x16.png");

            group.SetContentTemplateContent(content =>
            {
                CoreController<Unit> controller = (CoreController<Unit>)ViewContext.Controller;
                Html.RenderAction("GridFilterPartial", new
                {
                    Area = "General",
                    Controller = "Hierarchy",
                    RootList = HierarchyModel.GetLinkedHierarchies(controller.RootHierachy, HierarchyModel.EDIT_HIERARCHY_CHAIN).Select(s => s.Code).ToArray(),
                    GridName = "dxGridViewUnits",
                    GridController = "Unit",
                    GridAction = "IndexPartial",
                    Model = Model
                });
            });
        });
        
        settings.Groups.Add(group => {
            group.Text = "Фильтр";
            group.Expanded = false;
            group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
            group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
            MVCxNavBarItem item = null;
            group.ItemStyle.HoverStyle.Font.Bold = true;
            group.ItemStyle.HoverStyle.Font.Underline = true;
            group.ItemStyle.SelectedStyle.Font.Bold = true;
            group.HeaderImage.Url = Url.Content("~/Images/filter_x16.png");

            item = group.Items.Add("Только активные", "mnuFilterActive", "~/Images/filter_state_active_x16.png");
            item.NavigateUrl = "javascript:ShowOnlyActive();";
            item.ToolTip = "Отображать в списке только активные данные";
            item.Selected = true;
            
            item = group.Items.Add("Требующие корректировки", "mnuFilterCorrect", "~/Images/filter_state_needcorrect_x16.png");
            item.ToolTip = "Отображать в списке только требующие корректировки данные";
            item.NavigateUrl = "javascript:ShowOnlyNotDone();";
            
            item = group.Items.Add("Только запрещенные", "mnuFilterBan", "~/Images/filter_state_ban_x16.png");
            item.ToolTip = "Отображать в списке только требующие запрещенные данные";
            item.NavigateUrl = "javascript:ShowOnlyDenyed();";
            
            item = group.Items.Add("Корзина", "mnuFilterDeleted", "~/Images/filter_state_deleted_x16.png");
            item.ToolTip = "Отображать в списке только удаленные данные";
            item.NavigateUrl = "javascript:ShowOnlyDeleted();";
        });
        settings.Groups.Add(group =>
        {
            group.Text = "Отчеты";
            group.Expanded = false;
            group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
            group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
            group.ItemStyle.CssClass = "navpanellink";
            group.ItemLinkMode = GroupItemLinkMode.TextAndImage;
            group.HeaderImage.Url = Url.Content("~/Images/REPORT_X16.png");
            MVCxNavBarItem item = null;

            item = group.Items.Add("Microsoft Excel", "mnuExportToXLSX", "~/Images/FILEEXCEL_X16.png");
            item.NavigateUrl = "javascript:exportTo('XLSX');";
            item = group.Items.Add("Adobe PDF", "mnuExportToPDF", "~/Images/FILEPDF_X16.png");
            item.NavigateUrl = "javascript:exportTo('PDF');";

            if (WADataProvider.HiearchyElementRightView.IsAllow(Right.VIEW, WebModuleNames.WEB_REPORTS))
            {
                item = group.Items.Add("Перейти в отчеты...", "mnuReportNavToReportsMain", "~/Images/arrowgreen.png");
                item.ToolTip = "Перейти в раздел отчетов...";
                item.NavigateUrl = Url.Action("Index", new {area = "Reports", Controller = "Report"});
            }
        });
        settings.Groups.Add(group =>
        {
            group.Text = "Сервис";
            group.Name = "grpSettings";
            group.ItemLinkMode = GroupItemLinkMode.TextAndImage;
            group.Expanded = false;
            group.HeaderImage.Url = Url.Content("~/Images/settings_x16.png");
            group.SetContentTemplateContent(c => Html.RenderPartial("SettingsPartial", new ViewDataDictionary { { "GridName", "dxGridViewUnits" } }));
        });
    }).GetHtml()
</div>