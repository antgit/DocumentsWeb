@using System.Globalization
@using BusinessObjects
@using BusinessObjects.Security
@using BusinessObjects.Web.Core
@using DocumentsWeb.Areas.Kb.Controllers
@using DocumentsWeb.Models;
@using DocumentsWeb.Controllers;
@using DocumentsWeb.Areas.General.Models;

@{
    bool haveCreate = WADataProvider.LibrariesElementRightView.IsAllow(Right.UICREATE, WebModuleNames.WEB_MODULE_NEWS);
    bool haveEdit = WADataProvider.LibrariesElementRightView.IsAllow(Right.UIEDIT, WebModuleNames.WEB_MODULE_NEWS);
    bool haveDelete = WADataProvider.LibrariesElementRightView.IsAllow(Right.UITRASH, WebModuleNames.WEB_MODULE_NEWS);
    bool haveView = WADataProvider.LibrariesElementRightView.IsAllow(Right.UIVIEW, WebModuleNames.WEB_MODULE_NEWS);
    string helpDefaultLink = string.Empty;
    if (ViewData.ContainsKey("HelpDefaultLink"))
    {
        helpDefaultLink = ViewData["HelpDefaultLink"].ToString();
    }
}

<script src="@Url.Content("~/Scripts/jNewsActions.js")" type="text/javascript"></script>
<script type="text/javascript">
    var controllerName = 'News';
    

</script>

<div id="divActions" style="width: 100%; height: 100%; overflow: auto;">
    @Html.DevExpress().NavBar(settings =>
    {
        settings.Name = "nbFeatures";
        settings.AllowExpanding = true;
        settings.AllowSelectItem = true;
        settings.AutoCollapse = false;
        settings.EnableHotTrack = true;
        settings.EnableAnimation = true;
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.EncodeHtml = false;
        settings.Groups.Add(group => {
            group.Text = "Новости";
            group.Expanded = true;
            group.HeaderStyle.Font.Bold = true;
            group.ItemLinkMode = GroupItemLinkMode.TextAndImage;
            group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
            group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
            group.ItemStyle.CssClass = "navpanellink";


            group.ItemStyle.HoverStyle.Font.Bold = true;
            group.ItemStyle.HoverStyle.Font.Underline = true;
            group.HeaderImage.Url = Url.Content("~/Images/okey_x16.png");
            MVCxNavBarItem item = null;

            item = group.Items.Add("Помощь", "mnuActionHelp", "~/Images/INFO_X16.png");
            item.ToolTip = "Показать справочную информацию";
            item.Image.Url = "~/Images/INFO_X16.png";
            if (string.IsNullOrEmpty(helpDefaultLink))
                item.NavigateUrl = "javascript:alert('Справочная информация отсутствует!');";
            else
            {
                item.Target = "_blank";
                item.NavigateUrl = helpDefaultLink.StartsWith("~/") ? Url.Content(helpDefaultLink) : helpDefaultLink;
            }
            
            item = group.Items.Add("Создать", "mnuAdd", "~/Images/new_x16.png");
            //item.NavigateUrl = DevExpressHelper.GetUrl(new { Controller = "News", Action = "Create" });
            //item.Target = "_blank";
            item.NavigateUrl = "javascript:create();";
            item.ClientEnabled = haveCreate;
            item.ToolTip = "Создать новость...";

            item = group.Items.Add("Создать копию", "mnuAddCopy", "~/Images/copy_x16.png");
            item.NavigateUrl = "javascript:createCopy();";
            item.ClientEnabled = haveCreate;
            item.ToolTip = "Создать копию новости, текуще выделенной в списке";
                    
            item = group.Items.Add("Изменить", "mnuEdit", "~/Images/editdoc_x16.png");
            item.NavigateUrl = "javascript:editRow();";
            item.ClientEnabled = haveEdit;
            item.ToolTip = "Изменить/откорректировать выделенную новость в списке";

            item = group.Items.Add("Просмотр", "mnuPreview", "~/Images/editdoc_x16.png");
            item.NavigateUrl = "javascript:previewRow();";
            item.ClientEnabled = haveView;
            item.ToolTip = "Просмотр данных о новости";

            item = group.Items.Add("Удалить", "mnuDelete", "~/Images/delete_x16.png");
            item.NavigateUrl = "javascript:deleteNews();";
            item.ClientEnabled = haveDelete;
            item.ToolTip = "Удулить выделенную новость в корзину";
            
            item = group.Items.Add("Обновить", "mnuRefresh", "~/Images/refresh_x16.png");
            item.NavigateUrl = "javascript:dxGridViewNews.PerformCallback('refresh=true');";
            item.ToolTip = "Обновить данные в списке новостей. Рекомендуемое действие вместо обновления страницы.";
            
            item = group.Items.Add();
            item.SetTemplateContent(s => ViewContext.Writer.Write("<hr>"));

            item = group.Items.Add("Установить состояние \"Активен\"", "mnuStateActive", "~/Images/state_active_x16.png");
            item.NavigateUrl = "javascript:changeState(" + State.STATEACTIVE.ToString(CultureInfo.InvariantCulture) + ");";
            item.ClientEnabled = haveEdit;
            item.ToolTip = "Установка данного состояния возможная только при текущем состоянии не соответствующего \"Активному\" - например данное действие имеет смысл для требующих корректировки, запрещенных или удаленных задач";
            
            item = group.Items.Add("Требовать корректировки", "mnuStateNeedCorrect", "~/Images/state_needcorrect_x16.png");
            item.NavigateUrl = "javascript:changeState(" + State.STATENOTDONE.ToString(CultureInfo.InvariantCulture) + ");";
            item.ToolTip = "Установка данного состояния возможная только при текущем состоянии не соответствующего \"Требовующего корректировки\" - например данное действие имеет смысл для активных задач, чтобы в дальшейшем откорректировать задачу";
            item.ClientEnabled = haveEdit;
            
            item = group.Items.Add("\"Запрещен\"", "mnuStateBan", "~/Images/state_ban_x16.png");
            item.NavigateUrl = "javascript:changeState(" + State.STATEDENY.ToString(CultureInfo.InvariantCulture) + ");";
            item.ToolTip = "Установка данного состояния возможная только при текущем состоянии не соответствующего \"Запрещеному\" - например данное действие имеет смысл для для блокировки задачи по каким-либо причинам";
            item.ClientEnabled = haveEdit;
        });
        

        settings.Groups.Add(group =>
        {
            group.Text = "Иерархия";
            group.Expanded = true;
            group.HeaderImage.Url = Url.Content("~/Images/filter_nodes_x16.png");
            group.SetContentTemplateContent(content =>
            {
                ViewListNewsController controller = (ViewListNewsController)ViewContext.Controller;
                Html.RenderAction("HierarchyPartial", new
                {
                    Area = "General",
                    Controller = "Hierarchy",
                    RootList = HierarchyModel.GetLinkedHierarchies(controller.RootHierachy, HierarchyModel.FILTER_HIERARCHY_CHAIN).Select(s => s.Code).ToArray(),
                    OnSelectNode = "Hierarchy_NodeSelect"
                });
            });
        });
        
        settings.Groups.Add(group => {
            group.Text = "Фильтр";
            group.Expanded = true;
            group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
            group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
            group.ItemStyle.HoverStyle.Font.Bold = true;
            group.ItemStyle.HoverStyle.Font.Underline = true;
            group.ItemStyle.SelectedStyle.Font.Bold = true;
            group.HeaderImage.Url = Url.Content("~/Images/filter_x16.png");
            MVCxNavBarItem item = null;

            item = group.Items.Add("Только активные", "mnuFilterActive", "~/Images/filter_state_active_x16.png");
            item.NavigateUrl = "javascript:ShowOnlyActive();";
            item.Selected = true;
            item.ToolTip = "Отображать в списке только активные данные";
            
            item = group.Items.Add("Требующие корректировки", "mnuFilterCorrect", "~/Images/filter_state_needcorrect_x16.png");
            item.NavigateUrl = "javascript:ShowOnlyNotDone();";
            item.ToolTip = "Отображать в списке только требующие корректировки данные";
            
            item = group.Items.Add("Только запрещенные", "mnuFilterBan", "~/Images/filter_state_ban_x16.png");
            item.NavigateUrl = "javascript:ShowOnlyDenyed();";
            item.ToolTip = "Отображать в списке только требующие запрещенные данные";
            
            item = group.Items.Add("Корзина", "mnuFilterDeleted", "~/Images/filter_state_deleted_x16.png");
            item.NavigateUrl = "javascript:ShowOnlyDeleted();";
            item.ToolTip = "Отображать в списке только удаленные данные";

        });

        settings.Groups.Add(group =>
        {
            group.Text = "Сервис";
            group.Name = "grpSettings";
            group.ItemLinkMode = GroupItemLinkMode.TextAndImage;
            group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
            group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
            group.Expanded = false;
            group.HeaderImage.Url = Url.Content("~/Images/settings_x16.png");
            group.SetContentTemplateContent(c => Html.RenderPartial("SettingsPartial", new ViewDataDictionary { { "GridName", "dxGridViewNews" }, { "ShowMemoCheckBox", true } }));
        });
    }).GetHtml()
</div>