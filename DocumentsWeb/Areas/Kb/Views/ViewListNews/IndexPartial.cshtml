@using System.Globalization
@using BusinessObjects
@using DevExpress.Web.Mvc.UI;
@using DevExpress.Web.Mvc;
@using DocumentsWeb.Areas.Kb.Models;
@using DocumentsWeb.Areas.UserPersonal.Models
@using DocumentsWeb.Models;
@using BusinessObjects.Security;
@using BusinessObjects.Web.Core;

@{
    bool haveCreate = WADataProvider.LibrariesElementRightView.IsAllow(Right.UICREATE, WebModuleNames.WEB_MODULE_NEWS);
    bool haveEdit = WADataProvider.LibrariesElementRightView.IsAllow(Right.UIEDIT, WebModuleNames.WEB_MODULE_NEWS);
    bool haveDelete = WADataProvider.LibrariesElementRightView.IsAllow(Right.UITRASH, WebModuleNames.WEB_MODULE_NEWS);
    bool haveView = WADataProvider.LibrariesElementRightView.IsAllow(Right.UIVIEW, WebModuleNames.WEB_MODULE_NEWS);
}

@Html.DevExpress().GridView( settings => {
    settings.Name = "dxGridViewNews";
    settings.CallbackRouteValues = new { Controller = "ViewListNews", Action = "IndexPartial" };
    
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.KeyFieldName = GlobalPropertyNames.Id;
    settings.ClientVisible = false;
    // Альтернативная раскраска
    settings.Styles.AlternatingRow.Enabled = DefaultBoolean.True;
    
    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
    settings.SettingsBehavior.AllowFocusedRow = true;

    settings.Settings.ShowGroupPanel = DocumentsWeb.Code.LayoutHelper.GetCurrentSetting(Url.RequestContext.RouteData.Values["controller"].ToString()).Current.ShowGroupPanel;
    settings.Settings.ShowFooter = true;
    settings.Settings.ShowFilterRow = DocumentsWeb.Code.LayoutHelper.GetCurrentSetting(Url.RequestContext.RouteData.Values["controller"].ToString()).Current.ShowFilterPanel;
    settings.Settings.ShowFilterRowMenu = true;
    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Visible;
    
    settings.SettingsPager.PageSize = Utils.GetPageSize(settings);
    settings.SettingsPager.Position = System.Web.UI.WebControls.PagerPosition.Top;
    settings.SettingsPager.AlwaysShowPager = true;

    settings.SettingsBehavior.EnableCustomizationWindow = true;
    settings.SettingsPopup.CustomizationWindow.VerticalAlign = PopupVerticalAlign.Below;
    settings.SettingsPopup.CustomizationWindow.HorizontalAlign = PopupHorizontalAlign.OutsideRight;

    settings.Settings.ShowVerticalScrollBar = true;
    settings.Settings.ShowHorizontalScrollBar = true;

    settings.KeyboardSupport = true;

    settings.Styles.Cell.Paddings.Padding = System.Web.UI.WebControls.Unit.Pixel(2);

    settings.ClientSideEvents.Init = "function(s, e) { window.setTimeout(AdjustGridSize, 12);}";
    settings.ClientSideEvents.EndCallback = "function(s, e) { AdjustGridSize(); }";
    settings.ClientSideEvents.BeginCallback = "function(s, e) { if (tvHierarchiesFilter.GetSelectedNode() != null) { e.customArgs['Root'] = tvHierarchiesFilter.GetSelectedNode().name; } }";

    settings.Settings.ShowPreview = DocumentsWeb.Code.LayoutHelper.GetCurrentSetting(Url.RequestContext.RouteData.Values["controller"].ToString()).Current.ShowPreview;
    settings.PreviewFieldName = "Memo";

    settings.Columns.Add(cc =>
    {
        cc.Name = "colImageAction";
        if (haveEdit || haveView || haveDelete)
        {
            cc.Width = System.Web.UI.WebControls.Unit.Pixel(30);
            cc.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
            cc.Settings.AllowDragDrop = DefaultBoolean.False;
            cc.Settings.AllowSort = DefaultBoolean.False;
            cc.ShowInCustomizationForm = false;
            cc.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
            cc.SetDataItemTemplateContent(c =>
            {
                if (haveEdit || haveView)
                {
                    Html.DevExpress().HyperLink(hl =>
                    {
                        hl.Properties.ImageUrl = Url.Content("~/Images/edit10x10.png");
                        hl.ToolTip = "Изменить данные о новостях";
                        if (haveEdit)
                        {
                            hl.NavigateUrl = DevExpressHelper.GetUrl(new { Controller = "News", Action = "ControlView" }) + "/" + DataBinder.Eval(c.DataItem, "Id").ToString();
                            hl.Properties.Target = "_blank";
                        }
                        else
                        {
                            hl.Properties.ImageUrl = Url.Content("~/Images/search_x10.png");
                            hl.NavigateUrl = DevExpressHelper.GetUrl(new { Controller = "News", Action = "Preview", id = DataBinder.Eval(c.DataItem, "Id") });
                            hl.Properties.Target = "_blank";
                        }
                    }).Render();
                }
                if (haveDelete)
                {
                    Html.DevExpress().HyperLink(hl =>
                    {
                        hl.Properties.ImageUrl = Url.Content("~/Images/DELETEDELEMENT_X16.png");
                        hl.ToolTip = "Удалить данные о новости";
                        hl.NavigateUrl = "javascript:deleteRow(" + c.ItemIndex.ToString(CultureInfo.InvariantCulture) + ");";
                        hl.ClientVisible = haveDelete;
                        hl.ClientEnabled = haveDelete;
                    }).Render();
                }
            });
        }
    });


    settings.Columns.Add(col =>
    {
        col.Caption = "Дата";
        col.FieldName = GlobalPropertyNames.SendDate;
        col.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
        col.Width = 100;
        col.Visible = true;
        col.Settings.AllowAutoFilter = DefaultBoolean.True;
        col.ColumnType = MVCxGridViewColumnType.DateEdit;
        col.PropertiesEdit.DisplayFormatString = "dd.MM.yyyy";
        col.Settings.AutoFilterCondition = AutoFilterCondition.GreaterOrEqual;
    });

    MVCxGridViewColumn colAgentOwnerName = settings.Columns.Add("AgentOwnerName", "Автор");
    colAgentOwnerName.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
    colAgentOwnerName.Width = 150;
    colAgentOwnerName.Visible = true;
    colAgentOwnerName.Settings.AutoFilterCondition = AutoFilterCondition.Contains;

    if (DocumentsWeb.Code.LayoutHelper.GetCurrentSetting(Url.RequestContext.RouteData.Values["controller"].ToString()).Current.ShowLinkInName)
    {
        settings.Columns.Add(col =>
        {
            col.FieldName = GlobalPropertyNames.Name;
            col.Caption = "Наименование";
            col.Width = 350;
            col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            col.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
            col.SetDataItemTemplateContent(c => Html.DevExpress().HyperLink(s =>
                {
                    s.Properties.Text = (string)DataBinder.Eval(c.DataItem, GlobalPropertyNames.Name);
                    int id = (int)DataBinder.Eval(c.DataItem, "Id");
                    s.NavigateUrl = DevExpressHelper.GetUrl(new { Controller = "News", Action = haveEdit ? "ControlView" : "Preview", Area = "Kb" }) + "/" + id;
                    s.Properties.Target = "_blank";
                    s.ToolTip = "Просмотреть данные";
                }).Render());
        });
    }
    else
    {
        settings.Columns.Add(col =>
        {
            col.FieldName = GlobalPropertyNames.Name;
            col.Caption = "Наименование";
            col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            col.Width = 350;
            col.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
        });
    }        
            settings.Columns.Add(col =>
            {
                col.FieldName = GlobalPropertyNames.MyCompanyName;
                col.Caption = "Компания";
                col.Settings.AutoFilterCondition = AutoFilterCondition.BeginsWith;
                col.Width = 200;
                col.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
            });

            settings.Columns.Add(col =>
            {
                col.FieldName = GlobalPropertyNames.DisplayMemo;
                col.Caption = "Примечание";
                col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
                col.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
                col.Width = 400;
                col.Visible = false;
            });
        
        settings.Columns.Add(col =>
        {
            col.FieldName = GlobalPropertyNames.StateName;
            col.Caption = "Состояние";
            col.Settings.AutoFilterCondition = AutoFilterCondition.BeginsWith;
            col.Width = 75;
            col.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
        });
        settings.Columns.Add(col =>
        {
            col.Caption = "Ид состояния";
            col.FieldName = GlobalPropertyNames.StateId;
            col.Width = 75;
            col.Visible = false;
            col.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
        });

        MVCxGridViewColumn colDateModified = settings.Columns.Add(GlobalPropertyNames.DateModified, "Дата изменения");
        colDateModified.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
        colDateModified.Width = 150;
        colDateModified.Visible = false;
        colDateModified.ColumnType = MVCxGridViewColumnType.DateEdit;
        colDateModified.PropertiesEdit.DisplayFormatString = "dd.MM.yyyy hh:mm";
        colDateModified.Settings.AutoFilterCondition = AutoFilterCondition.GreaterOrEqual;
        colDateModified.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;

        MVCxGridViewColumn colUserName = settings.Columns.Add(GlobalPropertyNames.UserName, "Пользователь");
        colUserName.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
        colUserName.Width = 100;
        colUserName.Visible = false;

        if (User.IsInRole(Uid.GROUP_GROUPWEBADMIN))
        {
            settings.Columns.Add(col =>
            {
                col.Caption = "Ид";
                col.FieldName = GlobalPropertyNames.Id;
                col.Visible = false;
                col.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
                col.Width = 100;
                col.CellStyle.VerticalAlign = System.Web.UI.WebControls.VerticalAlign.Top;
            });
        }
    
    settings.SetPagerBarTemplateContent(c => Html.RenderPartial("TablePager", new ViewDataDictionary
        {
            { "ContentObject", c },
            { "TableCaption", "<b><a href=\"" + Url.Action("Index", new { area = "Kb", controller = "Home", action = "Index" }) + "\">Информация</a>\\Новости</b>" }
        }));
    
    settings.SettingsCookies.Enabled = false;
    settings.SettingsCookies.CookiesID = Url.RequestContext.RouteData.Values["controller"] + "Grid";
    settings.SettingsCookies.Version = "20120920_dev";

    settings.CustomCallback = (sender, e) =>
    {
        MVCxGridView grid = (MVCxGridView)sender;
        string refreshArg = e.Parameters.Split('&').FirstOrDefault(s => s.StartsWith("refresh"));
        bool refresh = (refreshArg != null) && (refreshArg.EndsWith("true"));
        if (refresh)
        {
            string root = Request.Params.AllKeys.Contains("Root") ? Request.Params["Root"] : "0";
            int rootId = 0;

            try
            {
                rootId = int.Parse(root);
                if(rootId==0)
                    rootId = WADataProvider.WA.Cashe.GetCasheData<Hierarchy>().ItemCode<Hierarchy>(Hierarchy.SYSTEM_MESSAGE_WEBNEWS).Id;
            }
            catch
            {
                rootId = WADataProvider.WA.Cashe.GetCasheData<Hierarchy>().ItemCode<Hierarchy>(Hierarchy.SYSTEM_MESSAGE_WEBNEWS).Id;
            }

            grid.DataSource = NewsModel.GetCollection(rootId, true);
            grid.DataBind();
        }
    };

    settings.ClientSideEvents.ColumnResizing = "function (s, e) {if (e.column.name == 'colImageAction') {e.cancel = true;}}";   
}).Bind(Model).GetHtml()