@using System.Globalization
@using BusinessObjects
@using BusinessObjects.Security
@using BusinessObjects.Web.Core
@using DocumentsWeb.Models;
@using DocumentsWeb.Controllers;
@using DocumentsWeb.Areas.General.Models;

@{
    bool haveCreate = WADataProvider.LibrariesElementRightView.IsAllow(Right.UICREATE, WebModuleNames.WEB_KNOWLEDGES) && !WADataProvider.CommonRightView.ReadOnly;
    bool haveEdit = WADataProvider.LibrariesElementRightView.IsAllow(Right.UIEDIT, WebModuleNames.WEB_KNOWLEDGES) && !WADataProvider.CommonRightView.ReadOnly;
    bool haveDelete = WADataProvider.LibrariesElementRightView.IsAllow(Right.UITRASH, WebModuleNames.WEB_KNOWLEDGES) && !WADataProvider.CommonRightView.ReadOnly;
    bool haveView = WADataProvider.LibrariesElementRightView.IsAllow(Right.UIVIEW, WebModuleNames.WEB_KNOWLEDGES);
    string helpDefaultLink = string.Empty;
    if (ViewData.ContainsKey("HelpDefaultLink"))
    {
        helpDefaultLink = ViewData["HelpDefaultLink"].ToString();
    }
}
<script src="@Url.Content("~/Scripts/jKnowledgeActions.js")" type="text/javascript"></script>
<script type="text/javascript">
    var controllerName = 'KbBase';

</script>

<div id="divActions" style="width: 100%; height: 100%; overflow: auto;">
    @Html.DevExpress().NavBar(settings =>
    {
        settings.Name = "nbFeatures";
        settings.AllowExpanding = true;
        settings.AllowSelectItem = true;
        settings.AutoCollapse = false;
        settings.EnableHotTrack = true;
        settings.EnableAnimation = true;
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.EncodeHtml = false;
        settings.Groups.Add(group => {
            group.Text = "Действия";
            group.Expanded = false;
            group.ItemStyle.CssClass = "navpanellink";
            group.HeaderStyle.Font.Bold = true;
            group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
            group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
            group.ItemLinkMode = GroupItemLinkMode.TextAndImage;
            group.HeaderImage.Url = Url.Content("~/Images/okey_x16.png");

            MVCxNavBarItem item = group.Items.Add("Помощь", "mnuActionHelp", "~/Images/INFO_X16.png");
            item.ToolTip = "Показать справочную информацию";
            item.Image.Url = "~/Images/INFO_X16.png";
            if (string.IsNullOrEmpty(helpDefaultLink))
                item.NavigateUrl = "javascript:alert('Справочная информация отсутствует!');";
            else
            {
                item.Target = "_blank";
                item.NavigateUrl = helpDefaultLink.StartsWith("~/") ? Url.Content(helpDefaultLink) : helpDefaultLink;
            }
            
            if (haveCreate)
            {
                item = group.Items.Add("Создать гиперссылку", "mnuAdd1", "~/Images/new_x16.png");
                item.NavigateUrl = "javascript:CreateHyperlink();";

                item = group.Items.Add("Создать локальную статью", "mnuAdd2", "~/Images/new_x16.png");
                item.NavigateUrl = "javascript:CreateLocal();";

                item = group.Items.Add("Создать копию", "mnuAddCopy", "~/Images/copy_x16.png");
                item.NavigateUrl = "javascript:createCopy();";
            }
            
            if (haveView)
            {
                item = group.Items.Add("Изменить", "mnuPreview", "~/Images/editdoc_x16.png");
                item.NavigateUrl = "javascript:previewRow();";
                item.ToolTip = "Просмотр данных о статье с возможностью дальнейшего изменения данных";
            }

            if (haveDelete)
            {
                item = group.Items.Add("Удалить", "mnuDelete", "~/Images/delete_x16.png");
                item.NavigateUrl = "javascript:deleteKnowledge();";
            }
            
            item = group.Items.Add("Обновить", "mnuRefresh", "~/Images/refresh_x16.png");
            item.NavigateUrl = "javascript:dxGridViewKnowledge.PerformCallback('refresh=true');";

            if (haveEdit)
            {
                item = group.Items.Add();
                item.SetTemplateContent(s => ViewContext.Writer.Write("<hr>"));

                item = group.Items.Add("Установить состояние \"Активен\"", "mnuStateActive", "~/Images/state_active_x16.png");
                item.NavigateUrl = "javascript:changeState(" + State.STATEACTIVE.ToString(CultureInfo.InvariantCulture) + ");";

                item = group.Items.Add("Требовать корректировки", "mnuStateNeedCorrect", "~/Images/state_needcorrect_x16.png");
                item.NavigateUrl = "javascript:changeState(" + State.STATENOTDONE.ToString(CultureInfo.InvariantCulture) + ");";

                item = group.Items.Add("\"Запрещен\"", "mnuStateBan", "~/Images/state_ban_x16.png");
                item.NavigateUrl = "javascript:changeState(" + State.STATEDENY.ToString(CultureInfo.InvariantCulture) + ");";
            }
        });
        

        settings.Groups.Add(group =>
        {
            group.Text = "Иерархия";
            group.Expanded = true;
            group.HeaderImage.Url = Url.Content("~/Images/filter_nodes_x16.png");
            group.SetContentTemplateContent(content =>
            {
                CoreController<Knowledge> controller = (CoreController<Knowledge>)ViewContext.Controller;
                Html.RenderAction("HierarchyPartial", new
                {
                    Area = "General",
                    Controller = "Hierarchy",
                    RootList = HierarchyModel.GetLinkedHierarchies(controller.RootHierachy, HierarchyModel.FILTER_HIERARCHY_CHAIN).Select(s => s.Code).ToArray(),
                    OnSelectNode = "Hierarchy_NodeSelect"
                });
            });
        });
        
        settings.Groups.Add(group => {
            group.Text = "Фильтр";
            group.Expanded = false;
            group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
            group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
            group.ItemStyle.HoverStyle.Font.Bold = true;
            group.ItemStyle.HoverStyle.Font.Underline = true;
            group.ItemStyle.SelectedStyle.Font.Bold = true;
            group.HeaderImage.Url = Url.Content("~/Images/filter_x16.png");

            MVCxNavBarItem item = group.Items.Add("Только активные", "mnuFilterActive", "~/Images/filter_state_active_x16.png");
            item.NavigateUrl = "javascript:ShowOnlyActive();";
            item.Selected = true;
            item = group.Items.Add("Требующие корректировки", "mnuFilterCorrect", "~/Images/filter_state_needcorrect_x16.png");
            item.NavigateUrl = "javascript:ShowOnlyNotDone();";
            item = group.Items.Add("Только запрещенные", "mnuFilterBan", "~/Images/filter_state_ban_x16.png");
            item.NavigateUrl = "javascript:ShowOnlyDenyed();";
            item = group.Items.Add("Корзина", "mnuFilterDeleted", "~/Images/filter_state_deleted_x16.png");
            item.NavigateUrl = "javascript:ShowOnlyDeleted();";
        });
        
        settings.Groups.Add(group =>
        {
            group.Text = "Сервис";
            group.Name = "grpSettings";
            group.ItemLinkMode = GroupItemLinkMode.TextAndImage;
            group.ItemStyle.Paddings.PaddingTop = System.Web.UI.WebControls.Unit.Pixel(2);
            group.ItemStyle.Paddings.PaddingBottom = System.Web.UI.WebControls.Unit.Pixel(2);
            group.Expanded = false;
            group.HeaderImage.Url = Url.Content("~/Images/settings_x16.png");
            group.SetContentTemplateContent(c => Html.RenderPartial("SettingsPartial", new ViewDataDictionary { { "GridName", "dxGridViewKnowledge" } }));
        });
    }).GetHtml()
</div>